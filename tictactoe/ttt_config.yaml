#
# Copyright 2019 Stefan Prisca
#
# The file is a copy of the Hyperledger e2e configuration found at
# < https://github.com/hyperledger/fabric-sdk-go/blob/master/test/fixtures/config/config_e2e.yaml >

version: 1.0.0

client:
  organization: player1

  logging:
    level: info
  # Root of the MSP directories with keys and certs.
  cryptoconfig:
    path: ${SCFIXTURES}/ttt/crypto-config/

  # Some SDKs support pluggable KV stores, the properties under "credentialStore"
  # are implementation specific
  credentialStore:
    # [Optional]. Used by user store. Not needed if all credentials are embedded in configuration
    # and enrollments are performed elswhere.
    path: "/tmp/state-store"

    # [Optional]. Specific to the CryptoSuite implementation used by GO SDK. Software-based implementations
    # requiring a key store. PKCS#11 based implementations does not.
    cryptoStore:
      # Specific to the underlying KeyValueStore that backs the crypto key store.
      path: /tmp/msp

  # [Optional] BCCSP config for the client. Used by GO SDK.
  BCCSP:
    security:
     enabled: true
     default:
      provider: "SW"
     hashAlgorithm: "SHA2"
     softVerify: true
     level: 256

  tlsCerts:
    # [Optional]. Use system certificate pool when connecting to peers, orderers (for negotiating TLS) Default: false
    systemCertPool: true

    # [Optional]. Client key and cert for TLS handshake with peers and orderers
    client:
      key:
        path: ${SCFIXTURES}/ttt/crypto-config/peerOrganizations/player1.tictactoe.com/users/User1@player1.tictactoe.com/tls/client.key
      cert:
        path: ${SCFIXTURES}/ttt/crypto-config/peerOrganizations/player1.tictactoe.com/users/User1@player1.tictactoe.com/tls/client.crt

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  #[Required if _default not defined; Optional if _default defined].
  # name of the channel
  tttchannel:
    peers:
      peer0.player1.tictactoe.com:
        endorsingPeer: true
        chaincodeQuery: true

        ledgerQuery: true

        eventSource: true
      
      peer0.player2.tictactoe.com:
        endorsingPeer: true
        chaincodeQuery: true

        ledgerQuery: true

        eventSource: true


#
# list of participating organizations in this network
#
organizations:
  Player1:
    mspid: Player1MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/player1.tictactoe.com/users/{username}@player1.tictactoe.com/msp

    peers:
      - peer0.player1.tictactoe.com

  Player2:
    mspid: Player2MSP

    # This org's MSP store (absolute path or relative to client.cryptoconfig)
    cryptoPath:  peerOrganizations/player2.tictactoe.com/users/{username}@player2.tictactoe.com/msp

    peers:
      - peer0.player2.tictactoe.com

  # Orderer Org name
  Orderer:
      # Membership Service Provider ID for this organization
      mspID: OrdererMSP

      # Needed to load users crypto keys and certs for this org (absolute path or relative to global crypto path, DEV mode)
      cryptoPath: ${SCFIXTURES}/ttt/crypto-config/ordererOrganizations/tictactoe.com/users/{username}@tictactoe.com/msp


#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.tictactoe.com:
    # [Optional] Default: Infer from hostname
    url: orderer.tictactoe.com:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.tictactoe.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${SCFIXTURES}/ttt/crypto-config/ordererOrganizations/tictactoe.com/tlsca/tlsca.tictactoe.com-cert.pem

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.player1.tictactoe.com:
    # this URL is used to send endorsement and query requests
    # [Optional] Default: Infer from hostname
    url: peer0.player1.tictactoe.com:7051

    grpcOptions:
      ssl-target-name-override: peer0.player1.tictactoe.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      # Certificate location absolute path
      path: ${SCFIXTURES}/ttt/crypto-config/peerOrganizations/player1.tictactoe.com/tlsca/tlsca.player1.tictactoe.com-cert.pem

  peer0.player2.tictactoe.com:
    url: peer0.player2.tictactoe.com:8051
    grpcOptions:
      ssl-target-name-override: peer0.player2.tictactoe.com
      # These parameters should be set in coordination with the keepalive policy on the server,
      # as incompatible settings can result in closing of connection.
      # When duration of the 'keep-alive-time' is set to 0 or less the keep alive client parameters are disabled
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      # allow-insecure will be taken into consideration if address has no protocol defined, if true then grpc or else grpcs
      allow-insecure: false

    tlsCACerts:
      path: ${SCFIXTURES}/ttt/crypto-config/peerOrganizations/player2.tictactoe.com/tlsca/tlsca.player2.tictactoe.com-cert.pem

entityMatchers:
  peer:
    # the below matcher will allow dynamic discovery to use the anchor peer (peer0.org1.example.com)
    # as a template for all org1 discovered peers config
    - pattern: (\w*)peer0.player1.tictactoe.com(\w*)
      urlSubstitutionExp: localhost:7051
      sslTargetOverrideUrlSubstitutionExp: peer0.player1.tictactoe.com
      mappedHost: peer0.player1.tictactoe.com

    - pattern: (\w*)peer0.player2.tictactoe.com(\w*)
      urlSubstitutionExp: localhost:9051
      sslTargetOverrideUrlSubstitutionExp: peer0.player2.tictactoe.com
      mappedHost: peer0.player2.tictactoe.com
